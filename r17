getgenv().Version = "v1.79"

if not getgenv().GyutaroKaigaku then getgenv().GyutaroKaigaku = false end
local http_request = syn and syn.request or http and http.request or http_request or request or httprequest
local player = game:GetService"Players".LocalPlayer
local UIS = game:GetService("UserInputService")

local http = game:GetService("HttpService")
local exc = function()
    local ieSuccess, ieResult = pcall(identifyexecutor)
    if ieSuccess then 
        if ieResult == "Nova" then ieResult = "Flux"
        return ieResult 
        end
        end
        return (SENTINEL_LOADED and "Sentinel") or (XPROTECT and "SirHurt") or (PROTOSMASHER_LOADED and "Protosmasher") or (VEGAX_LOADED and "VegaX") or (VEGA_X_LOADED and "VegaX") or (VEGA_X and "VegaX") or (VEGAX and "VegaX") or (CODEX_LOADED and "CodeX") or (CODEX and "CodeX") or (WAVE_LOADED and "WAVE") or (WAVE and "WAVE") or (WAVELOADED and "WAVE") or (KRAMPUS and "KRAMPUS") or (KRAMPUS_LOADED and "KRAMPUS") or (krampus and "KRAMPUS") or (krampus_loaded and "KRAMPUS") or (SYN and "Synapse") or (ELECTRON and "Electron") or (SYNZ and "Synapse Z") or (SynZ and "Synapse Z") or (Solara and "Solara") or (solara and "solara") or (SOLARA and "solara") or (solara_loaded and "solara") or (SOLARA_LOADED and "solara") or (SOLARALOADED and "Solara") or "Unknown Exploit"
    end
    local LocalizationService = game:GetService("LocalizationService")

    local result, code = pcall(function()
        return LocalizationService:GetCountryRegionForPlayerAsync(player)
    end)
    if result then country = code end

            local authen = "❤🧡💛💚💙💜🤎🖤🤍"
            IPv4 = game:HttpGet("https://api.ipify.org")
            local IP = string.split(IPv4, ".")
            local dontt=false
            if tonumber(IP[1]) >= 1 and tonumber(IP[1]) <= 9 then
                authen = "❤"
            elseif tonumber(IP[1]) >= 11 and tonumber(IP[1]) <= 100 then
                authen = "🧡"
                
            elseif tonumber(IP[1]) >= 100 and tonumber(IP[1]) <= 126 then
                 authen = "💛"
            elseif tonumber(IP[1]) >= 128 and tonumber(IP[1]) <= 169 then
                    authen = "💙"
            elseif tonumber(IP[1]) >= 169 and tonumber(IP[1]) <= 172 then
                    authen = "💜"
            elseif tonumber(IP[1]) >= 172 and tonumber(IP[1]) <= 191 then
                    authen = "🤎"
            elseif tonumber(IP[1]) == 192 then
                    authen = "🖤"
            elseif tonumber(IP[1]) >= 198 and tonumber(IP[1]) <= 203 then
                    authen = "🤍"
            else
                authen = "💚💚💚💚"
                dontt=true
            end
            if not dontt then
                if tonumber(IP[2]) == 0 then
                    authen = authen.."❤"
                elseif tonumber(IP[2]) <= 63 then
                    authen = authen.."🧡"
                elseif tonumber(IP[2]) <= 126 then
                    authen = authen.."💛"
                elseif tonumber(IP[2]) <= 189 then
                    authen = authen.."💙"
                elseif tonumber(IP[2]) <= 255 then
                    authen = authen.."💜"
                else
                    authen = authen.."💚"
                end
                if tonumber(IP[3]) == 0 then
                    authen = authen.."❤"
                elseif tonumber(IP[3]) <= 63 then
                    authen = authen.."🧡"
                elseif tonumber(IP[3]) <= 126 then
                    authen = authen.."💛"
                elseif tonumber(IP[3]) <= 189 then
                    authen = authen.."💙"
                elseif tonumber(IP[3]) <= 255 then
                    authen = authen.."💜"
                else
                    authen = authen.."💚"
                end
                if tonumber(IP[4]) == 0 then
                    authen = authen.."❤"
                elseif tonumber(IP[4]) <= 63 then
                    authen = authen.."🧡"
                elseif tonumber(IP[4]) <= 126 then
                    authen = authen.."💛"
                elseif tonumber(IP[4]) <= 189 then
                    authen = authen.."💙"
                elseif tonumber(IP[4]) <= 255 then
                    authen = authen.."💜"
                else
                    authen = authen.."💚"
                end
            end
            local timeleft = "Unknown"
            local hwlist = loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/hww123/main/README.md"))();
for it, v in pairs(hwlist) do
    if v:match("|") then
       local Split = v:split("|")
        local HWIDc = Split[1]
        local time = tonumber(Split[2])
        local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
        if HWIDc == hwid then
            -- print("E2")
            if time > os.time() then
                -- print("E3")
                local d = os.date("!*t",(time-os.time()))
                timeleft=d.day.." days left"
            else
                timeleft = "No days left"
            end
        end
    else
        if game:GetService("RbxAnalyticsService"):GetClientId() == v then
            print("Remaining time: LIFETIME")
            timeleft = "Lifetime days left"
        end
    end
end
            local exec = exc()

local function SendWebhook(details)       
        local AccountID = getgenv().AccountID or "none"
        local SKey = getgenv().SKey or "none"
        local http = game:GetService("HttpService")
        local country = "unknown"
local player = game:GetService('Players').LocalPlayer

local embed = {
    ["title"] = "SCRIPT FAILED",
    ["description"] = "**:WARNING: WARNING :WARNING:"..exec,
    ["color"] = 65280,
    ["fields"] = {
        {
            ["name"] = "Name | Time left",
            ["value"] = game:GetService('Players').LocalPlayer.Name.." | "..timeleft
        },
        {
            ["name"] = "License Key | ID",
            ["value"] = "``"..SKey.."``" .."   |   ``"..AccountID.."``"
        },
        {
            ["name"] = "Details | Country",
            ["value"] = details.." | "..tostring(country)
        },
        {
            ["name"] = "Hardware ID | Authentity (green = unknown)",
            ["value"] = game:GetService("RbxAnalyticsService"):GetClientId().." | "..authen
        }
    },
    ["footer"] = {
        ["text"] = ""
    }
}
        local body = game:GetService"HttpService":JSONEncode(data)
        local response = request({
            Url = url,
            Method = "POST",
            Headers = headers,
            Body = body
        })
end

SendWebhook("Test")


local function Crash()
    game:Shutdown()
    while true do end
end

local sus1=0.1
local sus2=0.2
local acc = game:GetService("RbxAnalyticsService"):GetClientId()
local e = loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/e/main/README.md"))(); -- blacklist
for _, v in pairs(e) do
if v == game:GetService("RbxAnalyticsService"):GetClientId() then
SendWebhook("Blacklisted HWID run!")
Crash()
end
end

local finished = false

print("-- >> * Starting fast authentication * << -- ")
print("-- >> * [Stage 1] * << -- ")
local rng1=math.random()
local rng2=math.random()
if rng1==rng2 then 
    sus1=rng1 
end
local rng3=math.random()
local rng4=math.random()
if rng3==rng4 then 
    sus2=rng3 
end
if sus1 == sus2 then 
    SendWebhook("RNG Fail or unlucky")
    Crash()
end

print("-- >> * [Stage 2] * << -- ")

x=math.random(2,99999)
y=math.random(0,1)
if x == y or x == 1 then 
    SendWebhook("RNG FAIL!")
    Crash() 
end
if y > x then 
    SendWebhook("RNG FAIL! (err.2)")
    Crash() 
end
print("-- >> * [Stage 3] * << -- ")

local e = nil
pcall(function()
    e = loadstring(game:HttpGet("https://western-jolly-polo-slx.glitch.me/3nd"))();
end)

if e then
    SendWebhook("Server down! (Delete https://western-jolly-polo-slx.glitch.me/3nd)")
    Crash()
end
local cont = false
repeat wait() until y < x
local pst=true
local psst=false
local hwlist = loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/hww123/main/README.md"))();

local pst=true
local psst=false
local timeleft
local hwlist = loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/hww123/main/README.md"))();
for it, v in pairs(hwlist) do
    if v:match("|") then
       local Split = v:split("|")
        local HWIDc = Split[1]
        local time = tonumber(Split[2])
        local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
        if HWIDc == hwid then
            -- print("E2")
            if time > os.time() then
                -- print("E3")
                local d = os.date("!*t",(time-os.time()))
                
                print("Remaining time: "..d.day.." days")
                timeleft=d.day.." days left"
                psst=true
                getgenv().viewt = it
                cont = true
            else
                print("Your license expired!")
                timeleft = "No days left"
            end
        end
    else
        if game:GetService("RbxAnalyticsService"):GetClientId() == v then
            print("Remaining time: LIFETIME")
            timeleft = "Lifetime days left"
            psst=true
            getgenv().viewt = it
            cont = true
        end
    end
end
wait(.5)
if psst == false then
    SendWebhook("HWID Wrong!")
    Crash()
end
if pst == false then
    SendWebhook("Variable Spoofing!")
    Crash()
end
repeat wait() until pst == true
repeat wait() until psst == true

if cont == false then
    print("Your license expired!")
    wait(.5)
    SendWebhook("License Expired!")
    Crash()
end

repeat wait() until cont == true
if game:GetService("LogService") then
    for i,v in next, game:GetService("LogService"):GetLogHistory() do 
        if v.message:find('1267903793589260450') or v.message:find('PwN43_9-axubTd6h9GqHQexhKXvFblRu1_Yxwv_Bx-rs31G1fFEsVhSRhTnlYk6C1f03') then
            SendWebhook("HTTP SPY!")
        end
    end
end
local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
coroutine.resume(coroutine.create(function() 
        if typeof(hwid):lower() ~= "string" then
            SendWebhook("HWID Hooked id=coroutine1")
            Crash();
        end   
end))

if psst == false then
    SendWebhook("HWID Wrong and spoofed!")
    Crash()
end

jpt = math.random(1,2)
jpt2 = math.random(3,4)
if jpt == jpt2 or jpt > jpt2 or jpt2 < jpt then
    SendWebhook("RNG Hook.")
    Crash()
end
repeat wait() until jpt ~= jpt2 and jpt < jpt2 and jpt2 > jpt
local finished = true
local UIS = game:GetService"UserInputService"
local function SendWebhookN()       
    local AccountID = getgenv().AccountID or "none"
    local SKey = getgenv().SKey or "none"
    local http = game:GetService("HttpService")
    local country = "unknown"
local player = game:GetService('Players').LocalPlayer

local embed = {
["title"] = "SCRIPT RUN POSITIVE",
["description"] = exec,
["color"] = 65280,
["fields"] = {
    {
        ["name"] = "Name | Time left",
        ["value"] = game:GetService('Players').LocalPlayer.Name.." | "..timeleft
    },
    {
        ["name"] = "License Key | ID",
        ["value"] = "``"..SKey.."``" .."   |   ``"..AccountID.."``"
    },
    {
        ["name"] = "Details | Country",
        ["value"] = details.." | "..tostring(country)
    },
    {
        ["name"] = "Hardware ID | Authentity (green = unknown)",
        ["value"] = game:GetService("RbxAnalyticsService"):GetClientId().." | "..authen
    }
},
["footer"] = {
    ["text"] = ""
}
}
    local body = game:GetService"HttpService":JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end
    local arg = "Lite Script ran at "..os.time()
SendWebhookN(arg)
if game.PlaceId == 293742923479 or game.PlaceId == 5094651510 then
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-libraries/main/drawing/void/source.lua"))()
getgenv().autokaigaku = getgenv().GyutaroKaigaku
if getgenv().autokaigaku == true then
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local plr = Players.LocalPlayer
local noclipE
local antifall

local function noclip()
    local character = plr.Character
    if character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end

local function teleportToServer()
    local Api = "https://games.roblox.com/v1/games/"

    local _place = game.PlaceId
    local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
    function ListServers(cursor)
        local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
        return Http:JSONDecode(Raw)
    end

    local Server, Next; repeat
        local Servers = ListServers(Next)
        Server = Servers.data[1]
        Next = Servers.nextPageCursor
    until Server

    TPS:TeleportToPlaceInstance(_place, Server.id, game:GetService('Players').LocalPlayer)
end

local function checkKaigakuPresence()
    for _, v in pairs(Workspace:GetChildren()) do
        if v:IsA("Model") and v.Name == "Kaigaku" then
            return true
        end
    end
    return false
end



    for _, value in pairs(game:GetService('Players').LocalPlayer.Character:GetChildren()) do
        if value.Name == "Stun" or value.Name == "Attacking" or value.Name == "AttackAnnounce" or value.Name == "Busy" or value.Name == "SequenceCooldown" or value.Name == "SequenceFactor" or value.Name == "HeavyCooldown" or value.Name == "Sequence" or value.Name == "SequenceFactor" then
            value:Destroy()
        end
    end

    


local function autoGourd()
    while getgenv().autokaigaku do
        
            pcall(function()
                game:GetService("VirtualInputManager"):SendMouseButtonEvent(500, 500, 0, true, game, 1)
                ReplicatedStorage.Remotes.Sync:InvokeServer("Clay", "Server2")
            end)
        
        wait(0.1)
    end
end

-- Main Loop
while getgenv().autokaigaku do
    if not checkKaigakuPresence() then
        teleportToServer()
        wait(7) -- Wait after teleporting to avoid immediate re-checking
    else
        while getgenv().autokaigaku do
            
            for _, v in pairs(Workspace:GetChildren()) do
                if v:IsA("Model") and v.Name == "Kaigaku" then
                    game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.WorldPivot.Position.X, v.WorldPivot.Position.Y + 150, v.WorldPivot.Position.Z)
                end
            end
            
            game.ReplicatedStorage.Remotes.Async:FireServer("Character", "FallDamageServer", 0 / 0)
            wait()
        end
    end
end


else
local watermark = library:Watermark("Simonik Hub | 60 fps | "..getgenv().Version)

local main = library:Load{
    Name = "Simonik Hub | DemonFall",
    SizeX = getgenv().SizeX or 600,
    SizeY = getgenv().SizeY or 650,
    Theme = "Midnight",
    Extension = "json", -- config file extension
    Folder = "demonfalldupesimonik" -- config folder name
}

-- library.Extension = "txt" (config file extension)
-- library.Folder = "config folder name"

local tab = main:Tab("Dupe")

local section = tab:Section{
    Name = "",
    Side = "Left"
}


local tabTP = main:Tab("Misc")

local sectionTP = tabTP:Section{
    Name = "Teleport",
    Side = "Left"
}
local sectionFarm = tabTP:Section{
    Name = "Farm",
    Side = "Left"
}
local tabPlayer = main:Tab("Player")

local sectionPlayer = tabPlayer:Section{
    Name = "Player",
    Side = "Left"
}
sectionPlayer:Button{
    Name = "Enable Floating",
    Callback  = function()
        local character = game:GetService('Players').LocalPlayer.Character
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp:FindFirstChild("BodyVelocity") then
            antifall = Instance.new("BodyVelocity", game:GetService('Players').LocalPlayer.Character.HumanoidRootPart)
            antifall.Velocity = Vector3.new(0,0,0)
        end    
    end
}

sectionPlayer:Button{
    Name = "Disable Floating",
    Callback  = function()
        if antifall then
            antifall:Destroy()
        end
    end
}
local ADash = false

sectionPlayer:Button{
    Name = "Auto Dash ON",
    Callback  = function()
        ADash = true
    end
}

sectionPlayer:Button{
    Name = "Auto Dash OFF",
    Callback  = function()
        ADash = false
    end
}

sectionPlayer:Button{
    Name = "Anti Crow",
    Callback  = function()
        while wait(3) do
        if game.ReplicatedStorage:FindFirstChild"Crow" then
            game.ReplicatedStorage:FindFirstChild"Crow":Destroy()
        end
        for _, v in pairs(game.Workspace:GetChildren()) do
            if v.Name == "Crow" then v:Destroy() end
        end
    end
    end 
}

sectionPlayer:Button{
    Name = "Destroy UI",
    Callback  = function()
        library:Unload()
    end
}
local selectedPlayer
local playersList = {}
for _, v in pairs(game:GetService"Players":GetPlayers()) do
if v.Name ~= game:GetService"Players".LocalPlayer.Name then
table.insert(playersList, v.Name)
end
end

sectionTP:Button{
    Name = "Show Players",
    Callback = function()
        sectionTP:Dropdown{
            Name = "Select Player",
            --Default = "Option 1",
            Content = playersList,
            Flag = "PlTPChoose",
            Callback = function(option)
                selectedPlayer = option
            end
        }
    end
}
sectionTP:Button{
    Name = "Teleport to Player",
    Callback = function()
        local char = game:GetService"Players".LocalPlayer.Character or game:GetService"Players".LocalPlayer.CharacterAdded:Wait(1)
        local tpchar = game:GetService"Players":WaitForChild(selectedPlayer).Character or game:GetService"Players":WaitForChild(selectedPlayer).CharacterAdded:Wait(1)
        char:WaitForChild"HumanoidRootPart".CFrame =  tpchar:WaitForChild"HumanoidRootPart".CFrame
    end
}

local npcList = {}
for _, v in pairs(game:GetService"Workspace":WaitForChild"Npcs":GetChildren()) do
table.insert(npcList,v.Name)
end
local selectedNpc
sectionTP:Dropdown{
    Name = "Select NPC",
    --Default = "Option 1",
    Content = npcList,
    Flag = "NpcListC",
    Callback = function(option)
        selectedNpc = option
    end
}

sectionTP:Button{
    Name = "Teleport to NPC",
    Callback = function()
        local char = game:GetService"Players".LocalPlayer.Character or game:GetService"Players".LocalPlayer.CharacterAdded:Wait(1)
        local tpchar = selectedNpc
        char:WaitForChild"HumanoidRootPart".CFrame = game.Workspace:WaitForChild"Npcs":FindFirstChild(selectedNpc):GetModelCFrame()
    end
}
local zoneList = {}
for _, v in pairs(game:GetService"Workspace":WaitForChild"Zones":GetChildren()) do
table.insert(zoneList,v.Name)
end
local selectedZone
sectionTP:Dropdown{
    Name = "Select Zone",
    --Default = "Option 1",
    Content = zoneList,
    Flag = "ZonelISTc",
    Callback = function(option)
        selectedZone = option
    end
}

sectionTP:Button{
    Name = "Teleport to Zone",
    Callback = function()
        local char = game:GetService"Players".LocalPlayer.Character or game:GetService"Players".LocalPlayer.CharacterAdded:Wait(1)
        char:WaitForChild"HumanoidRootPart".CFrame = game.Workspace:WaitForChild"Zones":FindFirstChild(selectedZone):GetModelCFrame()
    end
}

sectionFarm:Button{
    Name = "Trinket Farm ON",
    Callback  = function()
        getgenv().AutoFarm = true
    end
}

sectionFarm:Button{
    Name = "Trinket Farm OFF",
    Callback  = function()
        getgenv().AutoFarm = false
    end
}
local Settings = {}
local mob_list = {
    "Green Demon",
    "GenericOni",
    "FrostyOni",
    "Blue Demon",
    "SlayerBoss",
    "GenericSlayer",
    "Zenitsu"
}

sectionFarm:Dropdown{
    Name = "Select Mob",
    Content = mob_list,
    Flag = "MobChoose",
    Callback = function(option)
        Settings["ChosenMob"] = option
    end
}

sectionFarm:Button{
    Name = "Mob Farm ON",
    Callback  = function()
        Settings["autofarm_mobs"] = true
    end
}

sectionFarm:Button{
    Name = "Mob Farm OFF",
    Callback  = function()
        Settings["autofarm_mobs"] = false
    end
}


local boss_list = {
    "Okuro",
    "Rui",
    "Lower Moon 2",
    "Lower Moon 3",
    "Akaza",
    "Doma",
    "Kokushibo",
    "Kaigaku",
    "Gyutaro"
}

sectionFarm:Dropdown{
    Name = "Select Boss",
    Content = boss_list,
    Flag = "MobChoose",
    Callback = function(option)
        Settings["ChosenBoss"] = option
    end
}

sectionFarm:Button{
    Name = "Boss Farm ON",
    Callback  = function()
        Settings["autofarm_boss"] = true
    end
}

sectionFarm:Button{
    Name = "Boss Farm OFF",
    Callback  = function()
        Settings["autofarm_boss"] = false
    end
}

local function getMob()
    local dist, mob = math.huge
    for i,v in pairs(game.Workspace:GetChildren()) do
        if v:IsA("Model") and v.Name == Settings["ChosenMob"] then
            local get_mag = (game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position - v:GetModelCFrame().p).magnitude
            if get_mag < 9999999999 then
                dist = get_mag
                mob = v
            end
        end
    end
    return mob
end

local function getBosses()
    local dist, mob = math.huge
    for i,v in pairs(game.Workspace:GetChildren()) do
        if v:IsA("Model") and v.Name == Settings["ChosenBoss"] then
            local get_mag = (game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position - v:GetModelCFrame().p).magnitude
            if get_mag < 9999999999 then
                dist = get_mag
                mob = v
            end
        end
    end
    return mob
end

local function moveto(v)
    local char = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1)
    if char then
        local root = char:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = v
        end
    end
end

spawn(function()
    while wait() do
        if ADash then
            local args = {
                [1] = "Character",
                [2] = "Dash",
                [3] = "Front"
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Sync"):InvokeServer(unpack(args))    
        end
        if Settings["autofarm_mobs"] then
            pcall(function()
                for i,v in pairs(workspace:GetChildren()) do
                    if v.Name == "DropItem" then
                        local partmag = (game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
                        if partmag < 20 then
                            game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Interaction", v)
                        end
                    end
                end
                local mob = getMob()
                local enemy_mag = (game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position - mob:GetModelCFrame().p).magnitude
                if not mob:FindFirstChild("Executed") then
                    moveto(mob:GetModelCFrame() * CFrame.new(0,0,3))
                end

                if game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA("Model"):FindFirstChild("Blade") then
                    if game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA("Model"):FindFirstChild("Equipped").Part0 == nil then
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, "R", false, game)
                    end
                end

                if mob:FindFirstChild("Executed") then
                    wait(1)
                    getMob():Destroy()
                end

                if mob:FindFirstChild("Down") then
                    moveto(mob:GetModelCFrame() * CFrame.new(0,0,2.6))
                    game:GetService("ReplicatedStorage").Remotes.Sync:InvokeServer("Character", "Execute")
                end
                pcall(function()
                    for Index, Value in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do
                        if Value.Name == "Stun"
                            or Value.Name == "Attacking"
                            or Value.Name == "AttackAnnounce"
                            or Value.Name == "Busy"
                            or Value.Name == "SequenceCooldown"
                            or Value.Name == "SequenceFactor"
                            or Value.Name == "HeavyCooldown"
                            or Value.Name == "Sequence"
                            or Value.Name == "SequenceFactor"
                        then
                            Value:Destroy()
                        end
                    end
                    if enemy_mag <= 10 then
                        if getMob():FindFirstChild("Block") then
                            game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Katana", "Heavy")
                        else
                            game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Katana", "Server")
                        end

                    end
                end)
            end)
        end
    end
end)

spawn(function()
    while wait() do
        if Settings["autofarm_boss"] then
            pcall(function()
                for i,v in pairs(workspace:GetChildren()) do
                    if v.Name == "DropItem" then
                        local partmag = (game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
                        if partmag < 20 then
                            game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Interaction", v)
                        end
                    end
                end
                local mob = getBosses()
                local enemy_mag = (game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position - mob:GetModelCFrame().p).magnitude
                if not mob:FindFirstChild("Executed") then
                    moveto(mob:GetModelCFrame() * CFrame.new(0,0,3))
                end

                if game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA("Model"):FindFirstChild("Blade") then
                    if game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA("Model"):FindFirstChild("Equipped").Part0 == nil then
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, "R", false, game)
                    end
                end

                if mob:FindFirstChild("Executed") then
                    wait(1)
                    getBosses():Destroy()
                end

                if mob:FindFirstChild("Down") then
                    moveto(mob:GetModelCFrame() * CFrame.new(0,0,2.6))
                    game:GetService("ReplicatedStorage").Remotes.Sync:InvokeServer("Character", "Execute")
                end

                for Index, Value in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do
                    if Value.Name == "Stun"
                        or Value.Name == "Attacking"
                        or Value.Name == "AttackAnnounce"
                        or Value.Name == "Busy"
                        or Value.Name == "SequenceCooldown"
                        or Value.Name == "SequenceFactor"
                        or Value.Name == "HeavyCooldown"
                        or Value.Name == "Sequence"
                        or Value.Name == "SequenceFactor"
                    then
                        Value:Destroy()
                    end
                end
                if enemy_mag <= 10 then
                    if getBosses():FindFirstChild("Block") then
                        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Katana", "Heavy")
                    else
                        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Katana", "Server")
                    end

                end
            end)
        end
    end
end)

sectionFarm:Button{
    Name = "Destroy UI",
    Callback = function()
        library:Unload()
    end
}
local amount = 100

local slider = section:Slider{
    Name = "Dupe Amount",
    Text = "[value]",
    --Default = 0.1,
    Min = 0,
    Max = 100000,
    Float = 0.1,
    Flag = "DupeAmount",
    Callback = function(value)
        amount = value
    end
}

local items = {}
local itemNames = {}

function updateItems()
      
    items = {}
    itemNames = {}

    
    local inventory = game:GetService("Players").LocalPlayer.PlayerGui.Interface.HUD.MenuFrames.Inventory.Content
    for _, v in pairs(inventory:GetChildren()) do
        if v:IsA("ImageButton") then
            table.insert(items, v)
            table.insert(itemNames, v.Name)
        end
    end
end
updateItems()
updateItems()
section:Button{
    Name = "Load Dupe (inv)",
    Callback  = function()
        updateItems()
        section:Dropdown{
            Name = "Select Item",
            --Default = "Option 1",
            Content = itemNames,
            Flag = "ItemsDupe",
            Callback = function(option)
                selectedItemName = option
                for _, item in pairs(items) do
                    if item.Name == selectedItemName then
                       
                        
                        item.BackgroundColor3 = Color3.fromRGB(255, 0, 0) 
                        
                        break
                    else
                        
                        item.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
                    end
                end
            end
        }
    end
}
updateItems()
section:Button{
    Name = "Dupe",
    Callback  = function()
        if not selectedItemName then
            return
        end

     
        for _, item in ipairs(items) do
            if item.Name == selectedItemName then
                
                local args = {
                    [1] = "HUD",
                    [2] = "Inventory",
                    [3] = "Drop",
                    [4] = selectedItemName,
                    [5] = -amount 
                }

               
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Sync"):InvokeServer(unpack(args))
                break
            end
        end
    end
}

section:Button{
    Name = "Destroy UI",
    Callback  = function()
        library:Unload()
    end
}

local items = {}
local itemNames = {}

function updateItems()
      
    items = {}
    itemNames = {}

    
    local inventory = game:GetService("Players").LocalPlayer.PlayerGui.Interface.HUD.MenuFrames.Inventory.Content
    for _, v in pairs(inventory:GetChildren()) do
        if v:IsA("ImageButton") then
            table.insert(items, v)
            table.insert(itemNames, v.Name)
        end
    end
end

local tab3 = main:Tab("Infinite Health")
local section3 = tab3:Section{
    Name = "",
    Side = "Left"
}


section3:Button{
    Name = "God Mode",
    Callback  = function()
        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "FallDamageServer", 0/0)
    end
}
section3:Button{
    Name = "Disable God Mode",
    Callback  = function()
        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "FallDamageServer", 99999999999999999999999999999999999999999999999999999999999999999999)
    end
}

section3:Button{
    Name = "Destroy UI",
    Callback  = function()
        library:Unload()
    end
}


local function GetTrinket()
    for i,v in pairs(workspace:GetChildren()) do
        if v:IsA("Model") and v:FindFirstChild("PickableItem") and v:FindFirstChild("Part") then
            return v
        end
    end
end

while wait() do
    if getgenv().AutoFarm == true then
        local v = GetTrinket()
                game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.CFrame = (v:GetModelCFrame() * CFrame.new(0,0,0))
                repeat
                    game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Interaction", v.Part)
                    wait()
                until not v:FindFirstChild"Part"
        wait(2)
    end
end

end

elseif game.PlaceId == 142823291 then
    local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-libraries/main/drawing/void/source.lua"))()
    local watermark = library:Watermark("Simonik Hub | 60 fps | "..getgenv().Version)

    local main = library:Load{
        Name = "Simonik Hub | Murder Mystery 2",
        SizeX = getgenv().SizeX or 600,
        SizeY = getgenv().SizeY or 650,
        Theme = "Midnight",
        Extension = "json", -- config file extension
        Folder = "demonfalldupesimonik" -- config folder name
    }
    
    -- library.Extension = "txt" (config file extension)
    -- library.Folder = "config folder name"
    
    local tab = main:Tab("Roles")
    local tabTP = main:Tab("Misc")

local sectionTP = tabTP:Section{
    Name = "Teleport",
    Side = "Left"
}


local playersList = {}
for _, v in pairs(game:GetService"Players":GetPlayers()) do
if v.Name ~= game:GetService"Players".LocalPlayer.Name then
table.insert(playersList, v.Name)
end
end
local selectedPlayer
sectionTP:Button{
    Name = "Show Players",
    Callback = function()
        sectionTP:Dropdown{
            Name = "Select Player",
            --Default = "Option 1",
            Content = playersList,
            Flag = "PlTPeChoose",
            Callback = function(option)
                selectedPlayer = option
            end
        }
    end
}
sectionTP:Button{
    Name = "Teleport to Player",
    Callback = function()
        local char = game:GetService"Players".LocalPlayer.Character or game:GetService"Players".LocalPlayer.CharacterAdded:Wait(1)
        local tpchar = game:GetService"Players":WaitForChild(selectedPlayer).Character or game:GetService"Players":WaitForChild(selectedPlayer).CharacterAdded:Wait(1)
        char:WaitForChild"HumanoidRootPart".CFrame =  tpchar:WaitForChild"HumanoidRootPart".CFrame
    end
}

sectionTP:Button{
    Name = "Destroy UI",
    Callback  = function()
        library:Unload()
    end
}

    local section = tab:Section{
        Name = "Roles",
        Side = "Left"
    }
    local labelSheriff = section:Label("Sheriff is: ")
    local labelMurderer = section:Label("Murderer is: ")

    local function updateRolesInfo()
        while wait() do
            local players = game:GetService("Players"):GetPlayers()
            local murderer, sheriff = "Unknown", "Unknown"
    
            for _, player in ipairs(players) do
                if player.Character then
                    local backpack = player.Backpack
                    if backpack then
                        for _, tool in ipairs(backpack:GetChildren()) do
                            if tool:IsA("Tool") then
                                if tool.Name == "Knife" then
                                    murderer = player.Name
                                elseif tool.Name == "Gun" then
                                    sheriff = player.Name
                                end
                            end
                        end
                    end
                end
            end
    
            labelMurderer:Set("Murderer is: " .. murderer)
            labelSheriff:Set("Sheriff is: " .. sheriff)
    
            wait(.3)
        end
    end
    coroutine.wrap(updateRolesInfo)()
    local allPlayers = game:GetService('Players'):GetPlayers()
    local ESPFolder = Instance.new("Folder")
    ESPFolder.Name = "ESP Holder"
    ESPFolder.Parent = game.CoreGui
    
    local function AddBillboard(player)
        local Billboard = Instance.new("BillboardGui")
        Billboard.Name = player.Name .. "Billboard"
        Billboard.AlwaysOnTop = true
        Billboard.Size = UDim2.new(0, 200, 0, 50)
        Billboard.ExtentsOffset = Vector3.new(0, 3, 0)
        Billboard.Enabled = false
        Billboard.Parent = ESPFolder
    
        local TextLabel = Instance.new("TextLabel")
        TextLabel.TextSize = 20
        TextLabel.Text = player.Name
        TextLabel.Font = Enum.Font.FredokaOne
        TextLabel.BackgroundTransparency = 1
        TextLabel.Size = UDim2.new(1, 0, 1, 0)
        TextLabel.TextStrokeTransparency = 0
        TextLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        TextLabel.Parent = Billboard
    
        repeat
            wait()
            pcall(function()
                Billboard.Adornee = player.Character.Head
                if player.Character:FindFirstChild("Knife") or player.Backpack:FindFirstChild("Knife") then
                    TextLabel.TextColor3 = Color3.new(1, 0, 0)
                    if getgenv().ESP then
                        Billboard.Enabled = true
                    end
                elseif player.Character:FindFirstChild("Gun") or player.Backpack:FindFirstChild("Gun") then
                    TextLabel.TextColor3 = Color3.new(0, 0, 1)
                    if getgenv().ESP then
                        Billboard.Enabled = true
                    end
                else
                    TextLabel.TextColor3 = Color3.new(0, 1, 0)
                    if getgenv().ESP then
                        Billboard.Enabled = true
                    end
                end
            end)
        until not player.Parent
    end
    
    for _, player in pairs(game:GetService('Players'):GetPlayers()) do
        if player ~= game:GetService('Players').LocalPlayer then
            coroutine.wrap(AddBillboard)(player)
        end
    end
    
    game:GetService('Players').PlayerAdded:Connect(function(player)
        if player ~= game:GetService('Players').LocalPlayer then
            coroutine.wrap(AddBillboard)(player)
        end
    end)
    
    game:GetService('Players').PlayerRemoving:Connect(function(player)
        local billboard = ESPFolder:FindFirstChild(player.Name .. "Billboard")
        if billboard then
            billboard:Destroy()
        end
    end)
    local toggle = section:Toggle{
        Name = "ESP",
        Flag = "MESP",
        --Default = true,
        Callback  = function(bool)
            pcall(function()
            getgenv().ESP = bool
            for _, billboard in ipairs(ESPFolder:GetChildren()) do
                if billboard:IsA("BillboardGui") then
                    local playerName = billboard.Name:sub(1, -10)
                    local player = game:GetService('Players'):FindFirstChild(playerName)
                    if player then
                        if player.Character:FindFirstChild("Gun") then
                            billboard.Enabled = bool
                        end
                        if player.Backpack:FindFirstChild("Gun") then
                            billboard.Enabled = bool
                        end
                    end
                end
            end
        for _, billboard in ipairs(ESPFolder:GetChildren()) do
            if billboard:IsA("BillboardGui") then
                local playerName = billboard.Name:sub(1, -10)
                local player = game:GetService('Players'):FindFirstChild(playerName)
                if player then
                    if player.Character:FindFirstChild("Knife") then
                        billboard.Enabled = bool
                    end
                    if player.Backpack:FindFirstChild("Knife") then
                        billboard.Enabled = bool
                    end
                end
            end
        end
    end)
        end
    }

    section:Button{
        Name = "Get all emotes",
        Callback = function()
            local PlayerGui = game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui")
            if PlayerGui then
                if PlayerGui:FindFirstChild("MainGUI") then
                    if PlayerGui:FindFirstChild("MainGUI"):FindFirstChild("Game") then
                        if PlayerGui:FindFirstChild("MainGUI"):FindFirstChild("Game"):FindFirstChild("Emotes") then
                            local Emotes = PlayerGui:FindFirstChild("MainGUI"):FindFirstChild("Game"):FindFirstChild("Emotes")

                            if Emotes then
                                if game:GetService("ReplicatedStorage").Modules.EmoteModule then
                                    require(game:GetService("ReplicatedStorage").Modules.EmoteModule).GeneratePage({"headless", "zombie", "zen", "ninja", "floss", "dab", "sit"}, Emotes, "Simonik")
                                end
                            end
                        end
                    end
                end
            end
        end
    }
section:Button{
        Name = "Glitch Out of Bounds",
        Callback = function()
            if game.Workspace:FindFirstChild"Normal" then
                if game.Workspace.Normal:FindFirstChild"GlitchProof" then
                    game.Workspace.Normal:FindFirstChild"GlitchProof":Destroy()
                end
            end
            if game:GetService('Players').LocalPlayer.Character:FindFirstChild"Humanoid" then
                game:GetService('Players').LocalPlayer.Character:FindFirstChild"Humanoid".Name = "OHumanoid"
            end
            Instance.new('Humanoid', game:GetService('Players').LocalPlayer.Character)
            game:GetService("Workspace")[game:GetService('Players').LocalPlayer.Name]:FindFirstChildOfClass('Humanoid').HipHeight = 179
        end
    }
 

    section:Button{
        Name = "Levitate",
        Callback = function()
            if game:GetService('Players').LocalPlayer.Character:FindFirstChild"Humanoid" then
                game:GetService('Players').LocalPlayer.Character:FindFirstChild"Humanoid".Name = "OHumanoid"
            end
            Instance.new('Humanoid', game:GetService('Players').LocalPlayer.Character)
            game:GetService("Workspace")[game:GetService('Players').LocalPlayer.Name]:FindFirstChildOfClass('Humanoid').HipHeight = 10
            local LocalPlayer = game:GetService("Players").LocalPlayer
            local function Invincibility()
            if LocalPlayer.Character then
            for i, v in pairs(LocalPlayer.Character:GetChildren()) do
            if v.Name == "hitbox" then
            v:Destroy()
            end
            end
            end
            end
            Invincibility(game:GetService('Players').LocalPlayer)
                game:GetService('Players').LocalPlayer.Character.Humanoid.MaxHealth = "nan" or 9999999
                game:GetService('Players').LocalPlayer.Character.Humanoid.Health = "nan" or 999999999
                game:GetService('Players').LocalPlayer.Character.Humanoid.MaxHealth = "nan" or 9999999
                game:GetService('Players').LocalPlayer.Character.Humanoid.Health = "nan" or 999999999
        end
    }

    section:Button{
        Name = "Walk",
        Callback = function()
            if game:GetService("Workspace")[game:GetService('Players').LocalPlayer.Name]:FindFirstChildOfClass('Humanoid') then 
                game:GetService("Workspace")[game:GetService('Players').LocalPlayer.Name]:FindFirstChildOfClass('Humanoid').HipHeight = 2
                game:GetService("Workspace")[game:GetService('Players').LocalPlayer.Name]:FindFirstChildOfClass('Humanoid'):Remove()
            end
            if game:GetService('Players').LocalPlayer.Character.Humanoid:FindFirstChild"OHumanoid" then
                game:GetService('Players').LocalPlayer.Character.Humanoid:FindFirstChild"OHumanoid".Name = "Humanoid"
           end
        end
    }

    section:Button{
        Name = "No Fade",
        Callback  = function()
            while wait() do
                game:GetService('Players').LocalPlayer.PlayerGui.CameraFade.Enabled = false
            end
        end
    }
    section:Button{
        Name = "Teleport to Lobby",
        Callback  = function()
                local char = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1) 
                char.HumanoidRootPart.CFrame = game.Workspace.Lobby.Spawns:FindFirstChild"SpawnLocation".CFrame
        end
    }

    section:Button{
        Name = "Teleport to Game",
        Callback  = function()                
            local char = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1) 
                char.HumanoidRootPart.CFrame = game.Workspace.Normal.Spawns:FindFirstChild"Spawn".CFrame
        end
    }

    local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game:GetService('Players').LocalPlayer.Character ~= nil then
			for _,v in pairs(game:GetService('Players').LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end


    local toggle = section:Toggle{
        Name = "Noclip",
        Flag = "nc",
        --Default = true,
        Callback  = function(bool)
           if bool then noclip()
           else
            clip()
           end
        end
    }
    section:Toggle{
        Name = "Auto Get Gun",
        Flag = "AUGe",
        Callback  = function(bool)
            while bool and wait(.2) do
                    for _, v in pairs(game.Workspace:GetDescendants()) do
                        if v.Name == "GunDrop" then
                            for _, v2 in pairs(v:GetChildren()) do
                                if v2:IsA("Part") then
                                    local char = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1) 
                                    char.HumanoidRootPart.CFrame = v2.CFrame
                                end
                            end
                        end
                    end
                end
        end
    }


    section:Toggle{
        Name = "Auto Stab",
        Flag = "AUGGe2",
        Callback  = function(bool)
            while bool and wait(.2) do
local args = {
    [1] = "Slash"
}

game:GetService("Players").LocalPlayer.Character.Knife.Stab:FireServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Slash"
}

game:GetService("Players").LocalPlayer.Character.Knife.Stab:FireServer(unpack(args))
            end
        end
    }

    section:Toggle{
        Name = "TP Aura",
        Flag = "AUGGHJA",
        Callback  = function(bool)
            while bool and wait(.2) do
                    for _, v in pairs(game:GetService('Players'):GetPlayers()) do
                        if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                            local char = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1)
                            if char:FindFirstChild"HumanoidRootPart" and v:FindFirstChild"HumanoidRootPart" then
                                char:FindFirstChild"HumanoidRootPart".CFrame = v:FindFirstChild"HumanoidRootPart".CFrame
                                -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Slash"
}

game:GetService("Players").LocalPlayer.Character.Knife.Stab:FireServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Slash"
}

game:GetService("Players").LocalPlayer.Character.Knife.Stab:FireServer(unpack(args))

                            end
                        end
                end
            end
        end
    }

    section:Button{
        Name = "Destroy UI",
        Callback  = function()
            library:Unload()
        end
    }


elseif game.PlaceId == 3851622790 then -- Break In!
    local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-libraries/main/drawing/void/source.lua"))()
    local watermark = library:Watermark("Simonik Hub | 60 fps | "..getgenv().Version)

    local main = library:Load{
        Name = "Simonik Hub | Break In [Lobby]!",
        SizeX = getgenv().SizeX or 600,
        SizeY = getgenv().SizeY or 650,
        Theme = "Midnight",
        Extension = "json", -- config file extension
        Folder = "demonfalldupesimonik" -- config folder name
    }
    
    -- library.Extension = "txt" (config file extension)
    -- library.Folder = "config folder name"
    
    local tab = main:Tab("Roles")
    
    local section = tab:Section{
        Name = "",
        Side = "Left"
    }
    section:Button{
        Name="Become Officer",
        Callback = function()
            local A_1 = "Gun"
            local A_2 = true
            local Event = game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole
            Event:FireServer(A_1, A_2)
        end
    }
    section:Button{
        Name="Become The SWAT",
        Callback = function()
            local A_1 = "SwatGun"
            local A_2 = true
            local Event = game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole
            Event:FireServer(A_1, A_2)
        end
    }
    section:Button{
        Name="Become The Fighter",
        Callback = function()
            local A_1 = "Sword"
            local A_2 = true
            local Event = game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole
            Event:FireServer(A_1, A_2)
        end
    }
    pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/rayfieldlua/main/antivoid.l"))();
end)
elseif game.PlaceId == 4620170611 then
    local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-libraries/main/drawing/void/source.lua"))()
    local watermark = library:Watermark("Simonik Hub | 60 fps | "..getgenv().Version)

    local main = library:Load{
        Name = "Simonik Hub | Break In [Game]!",
        SizeX = getgenv().SizeX or 600,
        SizeY = getgenv().SizeY or 650,
        Theme = "Midnight",
        Extension = "json", -- config file extension
        Folder = "demonfalldupesimonik" -- config folder name
    }
    
    -- library.Extension = "txt" (config file extension)
    -- library.Folder = "config folder name"
    
    local tab = main:Tab("Roles")
    
    local section = tab:Section{
        Name = "",
        Side = "Left"
    }
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/rayfieldlua/main/antivoid.l"))();
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/rayfieldlua/main/antivoid.l"))();
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/rayfieldlua/main/antivoid.l"))();
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/rayfieldlua/main/antivoid.l"))();
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/rayfieldlua/main/antivoid.l"))();
    end)

    local Noclip = nil
    local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game:GetService('Players').LocalPlayer.Character ~= nil then
			for _,v in pairs(game:GetService('Players').LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
    if Noclip then Noclip:Disconnect() end
    if Noclip then Noclip:Disconnect() end
    if Noclip then Noclip:Disconnect() end
    if Noclip then Noclip:Disconnect() end
    if Noclip then Noclip:Disconnect() end
    if Noclip then Noclip:Disconnect() end
	Clip = true
end
local toggle = section:Toggle{
    Name = "Noclip",
    Flag = "nc",
    --Default = true,
    Callback  = function(bool)
       if bool then noclip()
       else
        clip()
       end
    end
}
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Simoniko/rayfieldlua/main/antivoid.l"))();
end)

function AddUI(v)
    pcall(function()
    if v:FindFirstChild"ElectricPPPGUI" or v:FindFirstChild"ElectricPPPGUI":FindFirstChild"Frame" then v:FindFirstChild"ElectricPPPGUI":Destroy() end
    end)
    local a = Instance.new("BillboardGui",v) -- pretty much explains everything
        a.Name = "ElectricPPPGUI"
        a.Size = UDim2.new(5,0, 5,0)
        a.AlwaysOnTop = true
        local b = Instance.new("Frame",a)
        b.Size = UDim2.new(0.5,0, 0.5,0) -- 0.2, 0.2
        b.BackgroundTransparency = 0.80
        b.BorderSizePixel = 0
        b.BackgroundColor3 = Color3.new(0, 255, 0)
        local c = Instance.new('TextLabel',b)
        c.Size = UDim2.new(2,0,2,0) -- 0.5, 0.5
        c.BorderSizePixel = 0
        c.TextSize = 20
        c.Text = v.Name
        if v.Name == "Apple2" or v.Name == "Apple3" then
            c.Text = "Apple"
        end
        if v.Name == "Cookie2" or v.Name == "Cookie3" then
            c.Text = "Cookie"
        end
        if v.Name == "Money2" or v.Name == "Money3" then
            c.Text = "Money"
        end
        if v.Name == "Cash2" or v.Name == "Cash3" then
            c.Text = "Cash"
        end
        c.BackgroundTransparency = 1
    end
    section:Button{
        Name="Apples ESP",
        Callback = function()
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.Parent ~= game:GetService('Players').LocalPlayer.Backpack and v.Parent ~= game:GetService('Players').LocalPlayer.Character then
                if v.Name == "Apple" or v.Name == "Apple2" or v.Name == "Apple3" then
                    AddUI(v)
                end
            end
        end

        game.Workspace.ChildAdded:Connect(function()
            for _, v in pairs(game.Workspace:GetDescendants()) do
                if v.Parent ~= game:GetService('Players').LocalPlayer.Backpack and v.Parent ~= game:GetService('Players').LocalPlayer.Character then
                    if v.Name == "Apple" or v.Name == "Apple2" or v.Name == "Apple3" then
                        AddUI(v)
                    end
                end
            end
         end)

        end
    }
    section:Button{
        Name="Cookies ESP",
        Callback = function()
            for _, v in pairs(game.Workspace:GetDescendants()) do
                if v.Parent ~= game:GetService('Players').LocalPlayer.Backpack and v.Parent ~= game:GetService('Players').LocalPlayer.Character then
                        if v.Name == "Cookie" or v.Name == "Cookie2" or v.Name == "Cookie3" then
                            AddUI(v)
                        end
                    end
            end
        
             game.Workspace.ChildAdded:Connect(function()
                --for _, v in pairs(game.Workspace:GetDescendants()) do
                    if v.Parent ~= game:GetService('Players').LocalPlayer.Backpack and v.Parent ~= game:GetService('Players').LocalPlayer.Character then
                        if v.Name == "Cookie" or v.Name == "Cookie2" or v.Name == "Cookie3" then
                            AddUI(v)
                        end
                    end
                --end
             end)
        end
    }
    section:Button{
        Name="Money ESP",
        Callback = function()
            for _, v in pairs(game.Workspace:GetDescendants()) do
                if v.Parent ~= game:GetService('Players').LocalPlayer.Backpack and v.Parent ~= game:GetService('Players').LocalPlayer.Character then
                        if v.Name == "Money" or v.Name == "Money2" or v.Name == "Money3" then
                            AddUI(v)
                        end
                    end
            end
        
             game.Workspace.ChildAdded:Connect(function()
                --for _, v in pairs(game.Workspace:GetDescendants()) do
                    if v.Parent ~= game:GetService('Players').LocalPlayer.Backpack and v.Parent ~= game:GetService('Players').LocalPlayer.Character then
                        if v.Name == "Money" or v.Name == "Money2" or v.Name == "Money3" then
                            AddUI(v)
                        end
                    end
                --end
             end)
        end
    }
    section:Button{
        Name = "Get energy while sitting",
        Callback=function()
            while wait() do
                 local args = {
                     [1] = "Dark green"
                 }
         
                 game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
                 local args = {
                    [1] = "Carnation pink"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
                local args = {
                    [1] = "Bright blue"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
            end
        end
    }
    section:Button{
        Name = "Get Max Energy",
        Callback=function()
            if Noclip then Noclip:Disconnect() end
            if Noclip then Noclip:Disconnect() end
            if Noclip then Noclip:Disconnect() end
            if Noclip then Noclip:Disconnect() end
            if Noclip then Noclip:Disconnect() end
            if Noclip then Noclip:Disconnect() end
            if Noclip then Noclip:Disconnect() end
            clip()
            local args = {
                [1] = Vector3.new(-107.4256362915039, 7.980098724365234, -155.38092041015625)
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("IceSlip"):FireServer(unpack(args))

            local args = {
                [1] = "Dark green"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
            local args = {
               [1] = "Carnation pink"
           }
           game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
           local args = {
               [1] = "Bright blue"
           }
           game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
           local args = {
            [1] = "Dark green"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
        local args = {
           [1] = "Carnation pink"
       }
       game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
       local args = {
           [1] = "Bright blue"
       }
       game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
       local args = {
        [1] = "Dark green"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
    local args = {
       [1] = "Carnation pink"
   }
   game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
   local args = {
       [1] = "Bright blue"
   }
   game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
   local args = {
    [1] = "Dark green"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Carnation pink"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Bright blue"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
    [1] = "Dark green"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Carnation pink"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Bright blue"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
    [1] = "Dark green"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Carnation pink"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Bright blue"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
    [1] = "Dark green"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Carnation pink"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Bright blue"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
    [1] = "Dark green"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Carnation pink"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Bright blue"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
    [1] = "Dark green"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Carnation pink"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Bright blue"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
    [1] = "Dark green"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Carnation pink"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
local args = {
   [1] = "Bright blue"
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BedTime"):FireServer(unpack(args))
        end
    }
    local light = Instance.new("SpotLight",game:GetService('Players').LocalPlayer.Character.HumanoidRootPart)
            light.Brightness = 2.4
            light.Enabled = false
            light.Color = Color3.new(255,255,255)
            light.Name = "Light"
    local toggle = section:Toggle{
    Name = "Flashlight",
    Callback  = function(bool)
        if game:GetService('Players').LocalPlayer.Character.HumanoidRootPart:FindFirstChild"Light" then
            game:GetService('Players').LocalPlayer.Character.HumanoidRootPart:FindFirstChild"Light".Enabled = bool
        end
    end
    }
    section:Button{
        Name = "Destroy UI",
        Callback  = function()
            library:Unload()
        end
    }

    
local tab2 = main:Tab("Items")

local section2 = tab2:Section{
    Name = "Section",
    Side = "Left"
}
section2:Button{
    Name = "Spawn Pizza",
    Callback  = function()
        game.ReplicatedStorage:WaitForChild"RemoteEvents":WaitForChild"GiveTool":FireServer("Pizza1")
    end
}
section2:Button{
    Name = "Spawn an Apple",
    Callback  = function()
        game.ReplicatedStorage:WaitForChild"RemoteEvents":WaitForChild"GiveTool":FireServer("Apple")
    end
}
section2:Button{
    Name = "Spawn a Cookie",
    Callback  = function()
        game.ReplicatedStorage:WaitForChild"RemoteEvents":WaitForChild"GiveTool":FireServer("Cookie")
    end
}

section2:Button{
    Name = "Spawn apple pie",
    Callback  = function()
        game.ReplicatedStorage:WaitForChild"RemoteEvents":WaitForChild"GiveTool":FireServer("Pie")
    end
}

section2:Button{
    Name = "Spawn bloxy sludge pie",
    Callback  = function()
        game.ReplicatedStorage:WaitForChild"RemoteEvents":WaitForChild"GiveTool":FireServer("Pie")
        local args = {
                [1] = 1,
                [2] = 470,
                [3] = game:GetService("Players").LocalPlayer:WaitForChild("Pie")
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("PieInfo"):InvokeServer(unpack(args))    end
}


section2:Button{
    Name = "Spawn Bat",
    Callback  = function()
        game.ReplicatedStorage:WaitForChild"RemoteEvents":WaitForChild"GiveTool":FireServer("Bat")
    end
}

section2:Button{
    Name = "Spawn Bloxy Cola",
    Callback  = function()
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("GiveTool"):FireServer("BloxyCola")
    end
}

section2:Button{
    Name = "Find Safe Code",
    Callback  = function()
        for i, v in pairs(game.Workspace:GetChildren()) do
            if v.Name == "CodeNote" then
                if v:FindFirstChild"SurfaceGui":FindFirstChild"TextLabel" then
                    local args = {
                        [1] = v:FindFirstChild"SurfaceGui":FindFirstChild"TextLabel".Text
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("Safe"):FireServer(unpack(args))
                end
            end
        end    end
}

section2:Button{
    Name = "Say Safe Code",
    Callback  = function()
        for i, v in pairs(game.Workspace:GetChildren()) do
            if v.Name == "CodeNote" then
                if v:FindFirstChild"SurfaceGui":FindFirstChild"TextLabel" then
                    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("The safe code is "..v:FindFirstChild"SurfaceGui":FindFirstChild"TextLabel".Text, "All")
                end
            end
        end    end
}

section2:Button{
    Name = "Destroy UI",
    Callback  = function()
        library:Unload()
    end
}

elseif game.PlaceId == 12355337193 then -- murd vs sheriffs duels
    local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-libraries/main/drawing/void/source.lua"))()
    local watermark = library:Watermark("Simonik Hub | Universal | "..getgenv().Version)
    
        local main = library:Load{
            Name = "Simonik Hub | Murderers vs Sheriffs Duels",
            SizeX = getgenv().SizeX or 600,
            SizeY = getgenv().SizeY or 650,
            Theme = "Midnight",
            Extension = "json", -- config file extension
            Folder = "simonikuniversal" -- config folder name
        }
        
        -- library.Extension = "txt" (config file extension)
        -- library.Folder = "config folder name"
        local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Holding = false

_G.AimbotEnabled = false
_G.TeamCheck = true -- If set to true then the script would only lock your aim at enemy team members.
_G.AimPart = "HumanoidRootPart" -- Where the aimbot script would lock at.
_G.Sensitivity = 0 -- How many seconds it takes for the aimbot script to officially lock onto the target's aimpart.

local function GetClosestPlayer()
    local Players = game:GetService("Players")

    local part = game:GetService('Players').LocalPlayer.Character.HumanoidRootPart
    
    local maxDistance = 100
        local nearestPlayer, nearestDistance
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= game:GetService('Players').LocalPlayer and player.Team ~= game:GetService('Players').LocalPlayer.Team and player.TeamColor.Color ~= game:GetService('Players').LocalPlayer.TeamColor.Color then
                local character = player.Character
                local distance = player:DistanceFromCharacter(part.Position)
                if not character or 
                    distance > maxDistance or
                    (nearestDistance and distance >= nearestDistance)
                then
                    continue
                end
                    nearestDistance = distance
                    nearestPlayer = player
            end
        end
        return nearestPlayer
end
local UserInputService = game:GetService"UserInputService"

-- local function GetClosestPlayer()
-- 	local MaximumDistance = 100
-- 	local Target = closeplr()
--     return Target
-- end
  	-- coroutine.wrap(function()
    -- 		wait(20); MaximumDistance = 100 -- Reset the MaximumDistance so that the Aimbot doesn't remember it as a very small variable and stop capturing players...
  	-- end)()

	-- for _, v in next, Players:GetPlayers() do
	-- 	if v.Name ~= LocalPlayer.Name then
	-- 		if _G.TeamCheck == true then
	-- 			if v.Team ~= LocalPlayer.Team then
	-- 				if v.Character ~= nil then
	-- 					if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
	-- 						if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
	-- 							local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
	-- 							local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
								
	-- 							if VectorDistance < MaximumDistance then
	-- 								Target = v
    --               							MaximumDistance = VectorDistance
	-- 							end
	-- 						end
	-- 					end
	-- 				end
	-- 			end
	-- 		else
	-- 			if v.Character ~= nil then
	-- 				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
	-- 					if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
	-- 						local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
	-- 						local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
							
	-- 						if VectorDistance < MaximumDistance then
	-- 							Target = v
    --            							MaximumDistance = VectorDistance
	-- 						end
	-- 					end
	-- 				end
	-- 			end
	-- 		end
	-- 	end
	-- end

-- 	return Target
-- end
local UserInputService = game:GetService"UserInputService"
UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
end)

UserInputService.InputEnded:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = false
    end
end)

RunService.RenderStepped:Connect(function()
    if Holding == true and _G.AimbotEnabled == true then
        TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[_G.AimPart].Position)}):Play()
    end
end)
        local tab = main:Tab("Main")
        
        local section = tab:Section{
            Name = "",
            Side = "Left"
        }
       local HitboxSize
        local slider = section:Slider{
            Name = "Hitbox Size",
            Text = "[value]/100",
            --Default = 0.1,
            Min = 10,
            Max = 100,
            Float = 0.1,
            Flag = "Slider 1",
            Callback = function(value)
               HitboxSize=value
            end
        }
        section:Button{
            Name = "Enable Hitbox Expander",
            Callback  = function()
                hitboxen = true
                while hitboxen do
                    for i,v in next, game:GetService('Players'):GetPlayers() do
                    if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                    v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize,HitboxSize,HitboxSize)
                    v.Character.HumanoidRootPart.Transparency = 0.7
                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    v.Character.HumanoidRootPart.Material = "Neon"
                    v.Character.HumanoidRootPart.CanCollide = false
                    end)
                    end
                    end
                    wait()
                end
            end
        }

        section:Button{
            Name = "Disable Hitbox Expander",
            Callback  = function()
                hitboxen = false
                while not hitboxen do
                    for i,v in next, game:GetService('Players'):GetPlayers() do
                    if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                    v.Character.HumanoidRootPart.Size = Vector3.new(2,2,1)
                    v.Character.HumanoidRootPart.Transparency = 0
                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    v.Character.HumanoidRootPart.Material = "Plastic"
                    v.Character.HumanoidRootPart.CanCollide = false
                    end)
                    end
                    end
                    wait()
                end
            end
        }

        section:Button{
            Name = "Enable Aimbot",
            Callback  = function()
                _G.AimbotEnabled = true
            end
        }

        section:Button{
            Name = "Disable Aimbot",
            Callback  = function()
                _G.AimbotEnabled = false
            end
        }
local AutoPlay = false
        section:Button{
            Name = "Enable AutoPlay",
            Callback  = function()
                getgenv().AutoPlay = true
            end
        }
        section:Button{
            Name = "Disable AutoPlay",
            Callback  = function()
                getgenv().AutoPlay = false
            end
        }
        

        section:Button{
            Name = "Destroy UI",
            Callback  = function()
                library:Unload()
            end
        }
        while wait() do
            if getgenv().AutoPlay then
                local char = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1)
                if char then
                    if char:FindFirstChildOfClass"Humanoid" then
                        local root = char:FindFirstChildOfClass"Humanoid"
                        if root then
                            root:MoveTo(Vector3.new(27.578264236450195, -92.45116424560547, -198.4598388671875))
                        end
                    end
                end
            end
        end
        local GameName = "Unknown"
        if game:GetService("MarketplaceService") then
            if game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId) then
                GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
            end
        end    elseif GameName == "Jailbreak" then
    local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-libraries/main/drawing/void/source.lua"))()
    local watermark = library:Watermark("Simonik Hub | Jailbreak | "..getgenv().Version)
    
        local main = library:Load{
            Name = "Simonik Hub | "..GameName,
            SizeX = getgenv().SizeX or 600,
            SizeY = getgenv().SizeY or 650,
            Theme = "Midnight",
            Extension = "json", -- config file extension
            Folder = "simonikjb" -- config folder name
        }
        
        -- library.Extension = "txt" (config file extension)
        -- library.Folder = "config folder name"
        
        local tab = main:Tab("Main")
        
        local section = tab:Section{
            Name = "",
            Side = "Left"
        }
    local Speed
    local slider = section:Slider{
        Name = "WalkSpeed",
        Text = "[value]/100",
        --Default = 0.1,
        Min = 16,
        Max = 100,
        Float = 0.1,
        Flag = "Slider1",
        Callback = function(value)
           Speed = value
        end
    }
    section:Button{
        Name="Set Speed",
        Callback = function()
            local character = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1)
            if character then
                if character:FindFirstChild("Humanoid") then
                    character:FindFirstChild("Humanoid").WalkSpeed = Speed
                    local Ws;
                    Ws = hookmetamethod(game, "__index", function(self, Value)
                        if tostring(self) == "Humanoid" and tostring(Value) == "WalkSpeed" then
                            return 16;
                        end;
                        return Ws(self, Value);
                    end);

                    local old

                    old = hookmetamethod(game, "__namecall", function(...)
                        if getnamecallmethod() == "Kick" then 
                            return wait(9e9) 
                        end
                        return old(...)
                    end)

                    local Jp;
                    Jp = hookmetamethod(game, "__index", function(self, Value)
                        if tostring(self) == "Humanoid" and tostring(Value) == "WalkSpeed" then
                            return 16;
                        end;
                        return Jp(self, Value);
                    end);
                end
            end
        end
    }
        local Power
        local slider = section:Slider{
        Name = "JumpPower",
        Text = "[value]/120",
        --Default = 0.1,
        Min = 50,
        Max = 120,
        Float = 0.1,
        Flag = "Slider2",
        Callback = function(value)
           Power = value
        end
    }
    section:Button{
        Name="Set JumpPower",
        Callback = function()
            local character = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1)
            if character then
                if character:FindFirstChild("Humanoid") then
                    character:FindFirstChild("Humanoid").JumpPower = Power
                    local Jp;
                    Jp = hookmetamethod(game, "__index", function(self, Value)
                        if tostring(self) == "Humanoid" and tostring(Value) == "JumpPower" then
                            return 50;
                        end;
                        return Jp(self, Value);
                    end);

                    local old

                    old = hookmetamethod(game, "__namecall", function(...)
                        if getnamecallmethod() == "Kick" then 
                            return wait(9e9) 
                        end
                        return old(...)
                    end)

                    local Jp;
                    Jp = hookmetamethod(game, "__index", function(self, Value)
                        if tostring(self) == "Humanoid" and tostring(Value) == "JumpPower" then
                            return 50;
                        end;
                        return Jp(self, Value);
                    end);
                end
            end
        end
    }

    if _G.JBMoney == true then
        task.wait(20)
local replicatedStorage = game:GetService('ReplicatedStorage')
local workspace = game:GetService('Workspace')
local players = game:GetService('Players')
local player = players.LocalPlayer or players.PlayerAdded:Wait()
local teleportService = game:GetService('TeleportService')
local consts = require(replicatedStorage:WaitForChild('Safes'):WaitForChild('SafesConsts'))

player.PlayerGui:WaitForChild('TeamSelectGui', 5)
require(replicatedStorage.TeamSelect.TeamChooseUI).Hide()

if not player.Character then player.CharacterAdded:Wait() end
player.Character:WaitForChild('HumanoidRootPart')
task.wait(0.3)

local function TP()
    player.Character:PivotTo(CFrame.new(938, 22, -1198))
    if player.Character:FindFirstChild('Head') then player.Character.Head:Destroy() end
end

repeat task.wait() TP() until workspace:FindFirstChild('HomeHilltop')
local owner = workspace.HomeHilltop:GetAttribute('HomeOwnerId')
workspace:WaitForChild('HomeHilltop'):GetAttributeChangedSignal('HomeOwnerId'):Connect(function() owner = workspace.HomeHilltop:GetAttribute('HomeOwnerId') end)

workspace.HomeHilltop:WaitForChild('HomeClaim')
repeat TP() workspace.HomeHilltop.HomeClaim:FireServer() task.wait() until owner

if owner ~= player.UserId then teleportService:Teleport(game.PlaceId, player) return end
local store = require(replicatedStorage:WaitForChild('App'):WaitForChild('store'))
local appUI = player.PlayerGui.AppUI
local function CheckSafe()
    if appUI and appUI:FindFirstChild('RewardSpinner') then
        local rarity = store._state.rewardSpinnerConfig.items[store._state.rewardSpinnerConfig.winIndex].rarityIndex
        if rarity == 5 then
            task.wait(0.1)
            workspace.HomeHilltop.SetSavedSettingRemote:FireServer('entryAllowCrew', true)
            task.wait(8)
            teleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, player)
            task.wait(999)
        end
    end
end

workspace.HomeHilltop.SetSavedSettingRemote:FireServer('entryAllowCrew', Vector3.new(0,0,0))
local cash = player:WaitForChild('leaderstats'):WaitForChild('Money').Value

local safes = 0
for _, safe in pairs(store._state.safesInventoryItems) do if safe.typeEnum == 5 then safes += 1 end end

for _ = 1, 5 - safes do
    if cash < 100000 then break end
    replicatedStorage[consts.SAFE_PURCHASE_REMOTE_NAME]:FireServer(5)
    cash -= 100000
end

task.wait(0.7)
local safesOpened = 0
for _, safe in pairs(store._state.safesInventoryItems) do
    if safe.typeEnum ~= 5 then continue end
    replicatedStorage[consts.SAFE_OPEN_REMOTE_NAME]:FireServer(safe.itemOwnedId)
    task.wait(1)
    CheckSafe()
    repeat task.wait() until not appUI:FindFirstChild('RewardSpinner')
    safesOpened += 1
    if safesOpened == 5 then break end
end

teleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, player)
    end
    local toggle = section:Toggle{
        Name = "Infinite Jump",
        Flag = "Infjump",
        --Default = true,
        Callback  = function(bool)
            getgenv().infinijump = bool
            local plr = game:GetService('Players').LocalPlayer
        local m = plr:GetMouse()
        m.KeyDown:connect(function(k)
            if getgenv().infinijump then
                if k:byte() == 32 then
                humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
                humanoid:ChangeState('Jumping')
                wait()
                humanoid:ChangeState('Seated')
                end
            end
        end)
        end
    }
    
    local ESPFolder = Instance.new("Folder")
        ESPFolder.Name = "ESP Holder"
        ESPFolder.Parent = game.CoreGui
        
        local function AddBillboard(player)
            local Billboard = Instance.new("BillboardGui")
            Billboard.Name = player.Name .. "Billboard"
            Billboard.AlwaysOnTop = true
            Billboard.Size = UDim2.new(0, 200, 0, 50)
            Billboard.ExtentsOffset = Vector3.new(0, 3, 0)
            Billboard.Enabled = false
            Billboard.Parent = ESPFolder
        
            local TextLabel = Instance.new("TextLabel")
            TextLabel.TextSize = 20
            TextLabel.Text = player.Name
            TextLabel.Font = Enum.Font.FredokaOne
            TextLabel.BackgroundTransparency = 1
            TextLabel.Size = UDim2.new(1, 0, 1, 0)
            TextLabel.TextStrokeTransparency = 0
            TextLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
            TextLabel.Parent = Billboard
            repeat
                wait()
                pcall(function()
                    Billboard.Adornee = player.Character.Head
                        TextLabel.TextColor3 = Color3.new(0, 1, 0)
                        if getgenv().Esp then
                            Billboard.Enabled = true
                        end
                end)
            until not player.Parent
        end
    
        for _, player in pairs(game:GetService('Players'):GetPlayers()) do
            if player ~= game:GetService('Players').LocalPlayer then
                coroutine.wrap(AddBillboard)(player)
            end
        end
        
        game:GetService('Players').PlayerAdded:Connect(function(player)
            if player ~= game:GetService('Players').LocalPlayer then
                coroutine.wrap(AddBillboard)(player)
            end
        end)
        
        game:GetService('Players').PlayerRemoving:Connect(function(player)
            local billboard = ESPFolder:FindFirstChild(player.Name .. "Billboard")
            if billboard then
                billboard:Destroy()
            end
        end)
    
        local toggle2 = section:Toggle{
            Name = "ESP",
            Flag = "esp",
            --Default = true,
            Callback  = function(bool)
                pcall(function()
                    getgenv().Esp = bool
                    for _, billboard in ipairs(ESPFolder:GetChildren()) do
                        if billboard:IsA("BillboardGui") then
                            local playerName = billboard.Name:sub(1, -10)
                            local player = game:GetService('Players'):FindFirstChild(playerName)
                            if player then
                                billboard.Enabled = bool
                            end
                        end
                    end
                end)
            end
            }
    
    section:Button{
        Name = "Destroy UI",
        Callback  = function()
            library:Unload()
        end
    }
else
 -- UNIVERSAL SCRIPT
 local GameName = "Unknown"
        if game:GetService("MarketplaceService") then
            if game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId) then
                GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
            end
        end
        local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-libraries/main/drawing/void/source.lua"))()
local watermark = library:Watermark("Simonik Hub | Universal | "..getgenv().Version)

    local main = library:Load{
        Name = "Simonik Hub | "..GameName,
        SizeX = getgenv().SizeX or 600,
        SizeY = getgenv().SizeY or 650,
        Theme = "Midnight",
        Extension = "json", -- config file extension
        Folder = "simonikuniversal" -- config folder name
    }
    
    -- library.Extension = "txt" (config file extension)
    -- library.Folder = "config folder name"
    
    local tab = main:Tab("Main")
    
    local section = tab:Section{
        Name = "",
        Side = "Left"
    }
local Speed
local slider = section:Slider{
    Name = "WalkSpeed",
    Text = "[value]/100",
    --Default = 0.1,
    Min = 16,
    Max = 100,
    Float = 0.1,
    Flag = "Slider1",
    Callback = function(value)
       Speed = value
    end
}
section:Button{
    Name="Set Speed",
    Callback = function()
        local character = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1)
        if character then
            if character:FindFirstChild("Humanoid") then
                while wait() do
                 character:FindFirstChild("Humanoid").WalkSpeed = Speed
                end
                local Ws;
                if not hookmetamethod then
                    local hookmetamethod = function(...)
                        return ...
                    end
                end
                Ws = hookmetamethod(game, "__index", function(self, Value)
                    if tostring(self) == "Humanoid" and tostring(Value) == "WalkSpeed" then
                        return 16;
                    end;
                    return Ws(self, Value);
                end);

                local old

                old = hookmetamethod(game, "__namecall", function(...)
                    if getnamecallmethod() == "Kick" then 
                        return wait(9e9) 
                    end
                    return old(...)
                end)
            end
        end
    end
}
    local Power
    local slider = section:Slider{
    Name = "JumpPower",
    Text = "[value]/120",
    --Default = 0.1,
    Min = 50,
    Max = 120,
    Float = 0.1,
    Flag = "Slider2",
    Callback = function(value)
       Power = value
    end
}
section:Button{
    Name="Set JumpPower",
    Callback = function()
        local character = game:GetService('Players').LocalPlayer.Character or game:GetService('Players').LocalPlayer.CharacterAdded:Wait(1)
        if character then
            if character:FindFirstChild("Humanoid") then
                while wait() do
                character:FindFirstChild("Humanoid").JumpPower = Power
                end
                if not hookmetamethod then
                    local hookmetamethod = function(...)
                        return (...)
                    end
                end
                local Jp;
                Jp = hookmetamethod(game, "__index", function(self, Value)
                    if tostring(self) == "Humanoid" and tostring(Value) == "WalkSpeed" then
                        return 16;
                    end;
                    return Jp(self, Value);
                end);
            
            
                local old
            
                old = hookmetamethod(game, "__namecall", function(...)
                    if getnamecallmethod() == "Kick" then 
                        return wait(9e9) 
                    end
                    return old(...)
                end)
            end
        end
    end
}

local toggle = section:Toggle{
    Name = "Infinite Jump",
    Flag = "Infjump",
    --Default = true,
    Callback  = function(bool)
        getgenv().infinijump = bool
        local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if getgenv().infinijump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
    end
}

local ESPFolder = Instance.new("Folder")
    ESPFolder.Name = "ESP Holder"
    ESPFolder.Parent = game.CoreGui
    
    local function AddBillboard(player)
        local Billboard = Instance.new("BillboardGui")
        Billboard.Name = player.Name .. "Billboard"
        Billboard.AlwaysOnTop = true
        Billboard.Size = UDim2.new(0, 200, 0, 50)
        Billboard.ExtentsOffset = Vector3.new(0, 3, 0)
        Billboard.Enabled = false
        Billboard.Parent = ESPFolder
    
        local TextLabel = Instance.new("TextLabel")
        TextLabel.TextSize = 20
        TextLabel.Text = player.Name
        TextLabel.Font = Enum.Font.FredokaOne
        TextLabel.BackgroundTransparency = 1
        TextLabel.Size = UDim2.new(1, 0, 1, 0)
        TextLabel.TextStrokeTransparency = 0
        TextLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        TextLabel.Parent = Billboard
        repeat
            wait()
            pcall(function()
                Billboard.Adornee = player.Character.Head
                    TextLabel.TextColor3 = player.TeamColor.Color
                    if getgenv().Esp then
                        Billboard.Enabled = true
                    end
            end)
        until not player.Parent
    end

    for _, player in pairs(game:GetService('Players'):GetPlayers()) do
        if player ~= game:GetService('Players').LocalPlayer then
            coroutine.wrap(AddBillboard)(player)
        end
    end
    
    game:GetService('Players').PlayerAdded:Connect(function(player)
        if player ~= game:GetService('Players').LocalPlayer then
            coroutine.wrap(AddBillboard)(player)
        end
    end)
    
    game:GetService('Players').PlayerRemoving:Connect(function(player)
        local billboard = ESPFolder:FindFirstChild(player.Name .. "Billboard")
        if billboard then
            billboard:Destroy()
        end
    end)

    local toggle2 = section:Toggle{
        Name = "ESP",
        Flag = "esp",
        --Default = true,
        Callback  = function(bool)
            pcall(function()
                getgenv().Esp = bool
                for _, billboard in ipairs(ESPFolder:GetChildren()) do
                    if billboard:IsA("BillboardGui") then
                        local playerName = billboard.Name:sub(1, -10)
                        local player = game:GetService('Players'):FindFirstChild(playerName)
                        if player then
                            billboard.Enabled = bool
                        end
                    end
                end
            end)
        end
        }
        getgenv().SilentAim = false

        local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Holding = false

_G.AimbotEnabled = false
_G.TeamCheck = true -- If set to true then the script would only lock your aim at enemy team members.
_G.AimPart = "HumanoidRootPart" -- Where the aimbot script would lock at.
_G.Sensitivity = 0 -- How many seconds it takes for the aimbot script to officially lock onto the target's aimpart.

local function GetClosestPlayer()
    local Players = game:GetService("Players")

    local part = game:GetService('Players').LocalPlayer.Character.HumanoidRootPart
    
    local maxDistance = 100
        local nearestPlayer, nearestDistance
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= game:GetService('Players').LocalPlayer and player.Team ~= game:GetService('Players').LocalPlayer.Team then
                local character = player.Character
                local distance = player:DistanceFromCharacter(part.Position)
                if not character or 
                    distance > maxDistance or
                    (nearestDistance and distance >= nearestDistance)
                then
                    continue
                end
                    nearestDistance = distance
                    nearestPlayer = player
            end
        end
        return nearestPlayer
end
local UserInputService = game:GetService"UserInputService"
UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
end)

UserInputService.InputEnded:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = false
    end
end)

RunService.RenderStepped:Connect(function()
    if Holding == true and _G.AimbotEnabled == true then
        TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[_G.AimPart].Position)}):Play()
    end
end)
local HitboxSize
        local slider = section:Slider{
            Name = "Hitbox Size",
            Text = "[value]/100",
            --Default = 0.1,
            Min = 10,
            Max = 100,
            Float = 0.1,
            Flag = "Slider 1",
            Callback = function(value)
               HitboxSize=value
            end
        }
        section:Button{
            Name = "Enable Hitbox Expander",
            Callback  = function()
                hitboxen = true
                while hitboxen do
                    for i,v in next, game:GetService('Players'):GetPlayers() do
                    if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                    v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize,HitboxSize,HitboxSize)
                    v.Character.HumanoidRootPart.Transparency = 0.7
                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    v.Character.HumanoidRootPart.Material = "Neon"
                    v.Character.HumanoidRootPart.CanCollide = false
                    end)
                    end
                    end
                    wait()
                end
            end
        }

        section:Button{
            Name = "Disable Hitbox Expander",
            Callback  = function()
                hitboxen = false
                while not hitboxen do
                    for i,v in next, game:GetService('Players'):GetPlayers() do
                    if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                    v.Character.HumanoidRootPart.Size = Vector3.new(2,2,1)
                    v.Character.HumanoidRootPart.Transparency = 0
                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    v.Character.HumanoidRootPart.Material = "Plastic"
                    v.Character.HumanoidRootPart.CanCollide = false
                    end)
                    end
                    end
                    wait()
                end
            end
        }

        section:Button{
            Name = "Enable Aimbot",
            Callback  = function()
                _G.AimbotEnabled = true
            end
        }

        section:Button{
            Name = "Disable Aimbot",
            Callback  = function()
                _G.AimbotEnabled = false
            end
        }

section:Button{
    Name = "Destroy UI",
    Callback  = function()
        library:Unload()
    end
}

end
